version: "3.3"

services:
  openresty:
    # This is our externally-facing gateway, exposing the configured
    # things for all end-users. It has the Analytics UI bundled into it.
    # See https://github.com/qlik-oss/core-assisted-prescription-openresty
    image: qlikcore/assisted-prescription-gateway:master-431
    restart: always
    ports:
      - "443:443"
    environment:
      # A prefix for session cookies, make sure this value is the same as in
      # the 'auth' service.
      SESSION_COOKIE_NAME: custom-analytics
      # Possible values: 'github', 'local'. Default is 'local'.
      AUTH_STRATEGY: ${AUTH_STRATEGY:-local}
    deploy:
      placement:
        constraints: [node.role == manager]

  redis:
    # The redis database stores sessions. The openresty gateway uses it to look
    # up JWTs based on the session cookie, while the authentication service use
    # it to create/delete these entries.
    image: redis:3.0.7-alpine
    deploy:
      placement:
        constraints: [node.role == manager]

  auth:
    # A service handling authentication and JWT generation.
    image: qlikcore/assisted-prescription-auth:0.0.1-128
    secrets:
      - github_client_id
      - github_client_secret
      - jwt_secret
      - cookie_signing
      - accounts_file
    environment:
      SESSION_COOKIE_NAME: custom-analytics
      GITHUB_CLIENT_ID_FILE: /run/secrets/github_client_id
      GITHUB_CLIENT_SECRET_FILE: /run/secrets/github_client_secret
      GITHUB_ORG_IS_ADMIN: qlik-oss
      JWT_SECRET_FILE: /run/secrets/jwt_secret
      COOKIE_SIGNING_FILE: /run/secrets/cookie_signing
      FAILURE_REDIRECT_URL: /
      AUTH_STRATEGY: ${AUTH_STRATEGY:-local}
      ACCOUNTS_FILE: /run/secrets/accounts_file
    deploy:
      placement:
        constraints: [node.role == manager]

  mira:
    # Mira is our Qlik Associative Engine Discovery Service. It provides internal
    # APIs to list (or query) all available Qlik Associative Engine containers
    # in the cluster.
    # See https://github.com/qlik-oss/mira
    image: qlikcore/mira:0.2.0
    environment:
     - MIRA_MODE=swarm
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints: [node.role == manager]

  licenses:
    # The Licenses service is responsible for unlocking
    # the Qlik Associative Engine.
    image: qlikcore/licenses:0.0.1
    deploy:
      placement:
        constraints: [node.role == manager]

  qix-engine:
    # Qlik Associative Engine is configured to run on all worker nodes in the
    # cluster, and is the service we primarily want to scale up in
    # this use-case.
    image: qlikcore/engine:12.171.0
    command: -S AcceptEULA=${ACCEPT_EULA} -S LicenseServiceUrl=http://licenses:9200 -S ValidateJsonWebTokens=2 -S JsonWebTokenSecret=${JWT_SECRET}
    labels:
      qix-engine: ""
      qix-engine-port: "9076"
    volumes:
      - /home/docker/data/csv:/data
      - /home/docker/data/doc:/doc
    deploy:
      mode: global
      placement:
        constraints: [node.role == worker, engine.labels.qix-engine == true]

  qix-session:
    # This service handles preparation of sessions against
    # Qlik Associative Engines. Uses Mira to find appropriate containers
    # to place the session on.
    # See https://github.com/qlik-oss/core-qix-session-placement-service
    image: qlikcore/qix-session-placement-service:0.0.1-170
    deploy:
      placement:
        constraints: [node.role == manager]

secrets:
  github_client_id:
    file: ./secrets/GITHUB_CLIENT_ID
  github_client_secret:
    file: ./secrets/GITHUB_CLIENT_SECRET
  jwt_secret:
    file: ./secrets/JWT_SECRET
  cookie_signing:
    file: ./secrets/COOKIE_SIGNING
  accounts_file:
    file: ./secrets/ACCOUNTS
